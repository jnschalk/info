CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams)
{
    CAmount nSubsidy = COIN;
    LogPrintf("block height for reward is %d\n", nHeight);

	
    if (nHeight < consensusParams.nDiffChangeTarget) { // < 67200
        if (nHeight < 1440)
        {
            // (Period I)
            nSubsidy = 72000 * COIN;
        }
        else if (nHeight < 5760)
        {
            // (Period II)
            nSubsidy = 16000 * COIN;
        }
        else
        {
            // (Period III)
            // This is pre-patch, reward is 8000.
            nSubsidy = 8000 * COIN;
        }
    }
    else if (nHeight < consensusParams.alwaysUpdateDiffChangeTarget) // < 400000
    {
        // (Period IV)
        nSubsidy = 8000 * COIN;
        int blocks = nHeight - consensusParams.nDiffChangeTarget;
        int weeks = (blocks / consensusParams.patchBlockRewardDuration) + 1;

        // Decrease reward by 0.5% every 10080 blocks
        for (int i = 0; i < weeks; i++)
        {
            nSubsidy -= (nSubsidy / 200);
        }
    }
    else if (nHeight < consensusParams.workComputationChangeTarget) // < 1430000
    {
        // (Period V)
        nSubsidy = 2459 * COIN;
        int blocks = nHeight - consensusParams.alwaysUpdateDiffChangeTarget;
        int weeks = (blocks / consensusParams.patchBlockRewardDuration2) + 1;
        // decrease reward by 1% every month
        for(int i = 0; i < weeks; i++)
        {
            nSubsidy -= (nSubsidy / 100);
        }
    }
    else if (nHeight < consensusParams.fixedSupplyCurveTarget) // < 17373200
    {
        // (Period VI)
        // Hard Fork Point: 1.43M
        // Subsidy at Hard Fork: 2157
        // Monthly Decay Factor: 98884/100000
		// Last Block Number: 17373199
		// Expected end of period VI = 2023/06/22
		// Subsidy at end: 388.40830665
        nSubsidy = 2157 * COIN / 2;
        int64_t blocks = nHeight - consensusParams.workComputationChangeTarget;
        int64_t months = blocks * BLOCK_TIME_SECONDS / SECONDS_PER_MONTH;

        for (int64_t i = 0; i < months; i++)
        {
            nSubsidy *= 98884;
            nSubsidy /= 100000;
        }
    }
    else if( nHeight < consensusParams.lastRewardBlock)	// 17373200 <= n < 41702928
	{
		// (Period VII)
		// starts 2023/06/22
		// target end 2035-01-15
		// Subsidy at start: 384
		// Monthly Decay Factor: 99896/100000 and a linear component
		// Last Block Number: 41702927
		// Subsidy at end: 2.43067049
		nSubsidy = 384 * COIN;
		int64_t blocks = nHeight - consensusParams.fixedSupplyCurveTarget;
		int64_t months = blocks * BLOCK_TIME_SECONDS / SECONDS_PER_MONTH;
		
		for (int64_t i = 0; i < months; i++)
		{
			nSubsidy *= 99896;
			nSubsidy /= 100000;
		}
		nSubsidy -= months * (CAmount)(2.39279 * COIN);	// linear component to get the supply and last reward block right
	}
	else if(nHeight == consensusParams.lastRewardBlock)
	{
		// special last block to make exactly 21 billion
		nSubsidy = 2.43067049 * COIN - 29553800;
	}
	else
		nSubsidy = 0;

    return nSubsidy;
}
